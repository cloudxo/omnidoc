AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Fast Document Management Server in Go

Parameters:

    DBHost:
      Description: Omnidoc Database Host
      Type: AWS::SSM::Parameter::Value<String>
      Default: /service/omnidoc/db/host

    DBName:
      Description: Omnidoc Database Name
      Type: AWS::SSM::Parameter::Value<String>
      Default: /service/omnidoc/db/name

    DBUser:
      Description: Omnidoc Database User
      Type: AWS::SSM::Parameter::Value<String>
      Default: /service/omnidoc/db/user

    DBPass:
      Description: Omnidoc Database Password
      Type: AWS::SSM::Parameter::Value<String>
      NoEcho: True
      Default: /service/omnidoc/db/password

    DMSBucket:
      Description: Omnidoc DMS S3 Bucket
      Type: AWS::SSM::Parameter::Value<String>
      Default: /service/omnidoc/dms/bucket

    NotificationEmail:
      Description: Omnidoc Notification Email
      Type: AWS::SSM::Parameter::Value<String>
      Default: /service/omnidoc/notification/email


###################################################################################################
##   Global Variablees                                                                           ##
##   More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
###################################################################################################
Globals:
  Function:
    Timeout: 5
    Runtime: go1.x
    Tracing: Active # https://docs.aws.amazon.com/lambda/latest/dg/lambda-x-ray.html
    Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
      Variables:  
        db_host: !Ref DBHost
        db_name: !Ref DBName
        db_user: !Ref DBUser
        db_pass: !Ref DBPass
        dms_bucket: !Ref DMSBucket
        notification_email: !Ref NotificationEmail

##################################################################################################
##   Template Resources                                                                          ##
###################################################################################################
Resources:
  ##   API Gateway                                                                                 
  DMSAPI:
    Type: AWS::Serverless::Api
    Properties:
      Name: "Omnidoc Document Management System API"
      StageName: Prod
      EndpointConfiguration: REGIONAL
      TracingEnabled: true
      Auth:
        ApiKeyRequired: true # sets for all methods 
        UsagePlan:
          CreateUsagePlan: PER_API
          Description: Usage plan for this API
          Quota:
            Limit: 500
            Period: MONTH
          Throttle:
            BurstLimit: 100
            RateLimit: 50
      MethodSettings:
        - HttpMethod: "*"
          ResourcePath: "/*"
          LoggingLevel: INFO
          DataTraceEnabled: true
          MetricsEnabled: true
          ThrottlingRateLimit: 2000
          ThrottlingBurstLimit: 1000
      DefinitionBody:
        'Fn::Transform':
          Name: 'AWS::Include'
          Parameters:
            Location: './api.yaml'

  CreateDocumentFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: services/assets/put
      Handler: put
      Events:
        DMSAPI:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /
            Method: POST
            RestApiId: !Ref DMSAPI
            Auth:
              ApiKeyRequired: true # sets for all methods
      Policies:
        - S3WritePolicy: 
            Effect: Allow
            Action:
              - s3:PutObject
            BucketName: !Ref DMSBucket

  ListDocumentsFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: services/assets/get
      Handler: get
      Events:
        DMSAPI:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /
            Method: GET
            RestApiId: !Ref DMSAPI
            Auth:
              ApiKeyRequired: true # sets for all methods
      Policies:
        - S3ReadPolicy: 
            Effect: Allow
            Action:
              - s3:GetObject
            BucketName: !Ref DMSBucket

###################################################################################################
##   Metrics outputs                                                                            ##
###################################################################################################

  NotifyTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref NotificationEmail
          Protocol: "email"

  APIGateway4xxAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: "OmniDoc API 4xx Alarm"
      AlarmDescription: "4xx monitor"
      MetricName: "4XXError"
      Namespace: "AWS/ApiGateway"
      Dimensions:
          - Name: "ApiName"
            Value: "OmniDoc API"
      Statistic: "Average"
      Period: 60
      EvaluationPeriods: 1
      Threshold: .01
      ComparisonOperator: "GreaterThanThreshold"
      AlarmActions:
        - !Ref NotifyTopic

  APIGateway5xxAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: "OmniDoc API 5xx Alarm"
      AlarmDescription: "5xx monitor"
      MetricName: "5XXError"
      Namespace: "AWS/ApiGateway"
      Dimensions:
          - Name: "ApiName"
            Value: "OmniDoc API"
      Statistic: "Average"
      Period: 60
      EvaluationPeriods: 1
      Threshold: .01
      ComparisonOperator: "GreaterThanThreshold"
      AlarmActions:
        - !Ref NotifyTopic

  APIGatewayLatencyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: "OmniDoc API Latency Alarm"
      AlarmDescription: "Latency monitor"
      MetricName: "Latency"
      Namespace: "AWS/ApiGateway"
      Dimensions:
          - Name: "ApiName"
            Value: "OmniDoc API"
      ExtendedStatistic: "p99"
      Period: 300
      EvaluationPeriods: 1
      Threshold: 75
      ComparisonOperator: "GreaterThanThreshold"
      AlarmActions:
        - !Ref NotifyTopic

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  DMSAPI:
    Description: "API Gateway endpoint URL for Prod environment for OmniDoC API"
    Value: !Sub "https://${DMSAPI}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
